#!/usr/bin/env python
'''
prepare-replies-model

Usage:
    prepare-replies-model <replies_text_dataset> <output_model_weights> <output_model_codec>

Take a replies labled text dataset and then train and save a useable
model.
'''

import docopt
import mailscanner
import keras
import pickle

if __name__ == '__main__':
    arguments = docopt.docopt(__doc__)
    replies = mailscanner.datasets.LabeledTextFileDataset(
        arguments['<replies_text_dataset>'])
    targets = replies.one_hot_labels
    sources = replies.texts
    model = mailscanner.models.Ensemble(replies)

    print(model.summary())
    # saved encoder
    replies.save(arguments['<output_model_codec>'])

    # run with callback to save the best performing weights
    save_best_weights = keras.callbacks.ModelCheckpoint(
        arguments['<output_model_weights>'], save_best_only=True, save_weights_only=True, verbose=True)
    model.fit(
        x=sources,
        y=targets,
        validation_split=0.01,
        batch_size=128,
        epochs=256,
        callbacks=[save_best_weights]
    )
